<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>ESE Project 4: Hoofdprogramma/ourProgram/src/serialCommunicationCapsule.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ESE Project 4
   </div>
   <div id="projectbrief">Main</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/de8/our_program_2src_2serial_communication_capsule_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">serialCommunicationCapsule.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../de/de8/our_program_2src_2serial_communication_capsule_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// {{{RME classifier &#39;Logical View::Serial::serialCommunicationCapsule&#39;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#if defined( PRAGMA ) &amp;&amp; ! defined( PRAGMA_IMPLEMENTED )</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma implementation &quot;serialCommunicationCapsule.h&quot;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../dd/d50/our_program_8h.xhtml">RTSystem/ourProgram.h</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../d6/d64/our_program_2src_2serial_communication_capsule_8h.xhtml">serialCommunicationCapsule.h</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../dc/d4d/our_program_2src_2serial_properties_8h.xhtml">serialProperties.h</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// {{{RME tool &#39;OT::Cpp&#39; property &#39;ImplementationPreface&#39;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> RTRelayDescriptor rtg_relays[] =</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="stringliteral">&quot;serialPort&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;      , &amp;<a class="code" href="../../d7/d72/classserial_raw_protocol_1_1_base.xhtml#a7f3ab0830bb1ad0100da237fb35cf9f2">serialRawProtocol::Base::rt_class</a></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      , 1 <span class="comment">// cardinality</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;};</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">static</span> RTActor * new_serialCommunicationCapsule_Actor( RTController * _rts, RTActorRef * _ref )</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml">serialCommunicationCapsule_Actor</a>( _rts, _ref );</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="code" href="../../d8/db0/roomba_controller_2src_2serial_top_capsule_8cpp.xhtml#a991c1f89043c03355b750338ec1dd52f">   31</a></span>&#160;<span class="keyword">const</span> RTActorClass <a class="code" href="../../de/de8/our_program_2src_2serial_communication_capsule_8cpp.xhtml#a991c1f89043c03355b750338ec1dd52f">serialCommunicationCapsule</a> =</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    (<span class="keyword">const</span> RTActorClass *)0</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  , <span class="stringliteral">&quot;serialCommunicationCapsule&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  , (RTVersionId)0</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  , 1</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  , rtg_relays</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  , new_serialCommunicationCapsule_Actor</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span> rtg_state_names[] =</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="stringliteral">&quot;TOP&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  , <span class="stringliteral">&quot;Reset&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  , <span class="stringliteral">&quot;openPort&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  , <span class="stringliteral">&quot;getChars&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  , <span class="stringliteral">&quot;ClosePort&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="../../de/de8/our_program_2src_2serial_communication_capsule_8cpp.xhtml#a34ec0bf4b9f4cbde166aa283c8f5b1f2">   50</a></span>&#160;<span class="preprocessor">#define SUPER RTActor</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aa131796215382975c91e0c7f461fb9db">   52</a></span>&#160;<a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aa131796215382975c91e0c7f461fb9db">serialCommunicationCapsule_Actor::serialCommunicationCapsule_Actor</a>( RTController * rtg_rts, RTActorRef * rtg_ref )</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    : RTActor( rtg_rts, rtg_ref )</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a7f78de4fb15b4fed07be7c8a19cba13f">   57</a></span>&#160;<a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a7f78de4fb15b4fed07be7c8a19cba13f">serialCommunicationCapsule_Actor::~serialCommunicationCapsule_Actor</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aa3472f2d96a3bf10253a1d82c9d93e15">   61</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aa3472f2d96a3bf10253a1d82c9d93e15">serialCommunicationCapsule_Actor::_followInV</a>( RTBindingEnd &amp; rtg_end, <span class="keywordtype">int</span> rtg_portId, <span class="keywordtype">int</span> rtg_repIndex )</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">switch</span>( rtg_portId )</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">case</span> 0:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="comment">// serialPort</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">if</span>( rtg_repIndex &lt; 1 )</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            rtg_end.port = &amp;<a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a9dd4fbb991c636e2eeefb23e8ea49c67">serialPort</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            rtg_end.index = rtg_repIndex;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> RTActor::_followInV( rtg_end, rtg_portId, rtg_repIndex );</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">// {{{RME enter &#39;:TOP:Reset&#39;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aadc5263e2c451a96bcdf65def57bccc4">   81</a></span>&#160;INLINE_METHODS <span class="keywordtype">void</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aadc5263e2c451a96bcdf65def57bccc4">serialCommunicationCapsule_Actor::enter2_Reset</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;in reset terecht gekomen&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a1e9e26c1411010d3c8fed7f99f09fdf4">   89</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a1e9e26c1411010d3c8fed7f99f09fdf4">serialCommunicationCapsule_Actor::enterStateV</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">switch</span>( getCurrentState() )</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">case</span> 2:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#aadc5263e2c451a96bcdf65def57bccc4">enter2_Reset</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        RTActor::enterStateV();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">// {{{RME transition &#39;:TOP:Initial:Initial&#39;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a71718dd6a5cff73067e3a3ec839cab84">  103</a></span>&#160;INLINE_METHODS <span class="keywordtype">void</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a71718dd6a5cff73067e3a3ec839cab84">serialCommunicationCapsule_Actor::transition1_Initial</a>( <span class="keyword">const</span> <span class="keywordtype">void</span> * rtdata, RTProtocol * rtport )</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;Serial capsule initialized&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;INLINE_CHAINS <span class="keywordtype">void</span> serialCommunicationCapsule_Actor::chain1_Initial( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// transition &#39;:TOP:Initial:Initial&#39;</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    rtgChainBegin( 1, <span class="stringliteral">&quot;Initial&quot;</span> );</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    rtgTransitionBegin();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a71718dd6a5cff73067e3a3ec839cab84">transition1_Initial</a>( msg-&gt;data, msg-&gt;sap() );</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    rtgTransitionEnd();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a142ac0dee75aca429b5eebbaef9d3988">choicePoint1_openPort</a>( msg-&gt;data, msg-&gt;sap() ) )</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        chain3_True();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        chain2_False();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">// {{{RME choicePoint &#39;:TOP:openPort&#39;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a142ac0dee75aca429b5eebbaef9d3988">  125</a></span>&#160;INLINE_METHODS <span class="keywordtype">int</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a142ac0dee75aca429b5eebbaef9d3988">serialCommunicationCapsule_Actor::choicePoint1_openPort</a>( <span class="keyword">const</span> <span class="keywordtype">void</span> * rtdata, RTProtocol * rtport )</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">/* 9600 baud */</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">/* /dev/ttyS0 (COM1 on windows) */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="../../dd/d8b/rs232_8h.xhtml#a1db4cce3e562cf7cbc88e7e7f83d4fd6">RS232_OpenComport</a>(<a class="code" href="../../dc/d4d/our_program_2src_2serial_properties_8h.xhtml#a815c323a5a0855438aff183c01f0c5ab">COM_PORT</a>, <a class="code" href="../../dc/d4d/our_program_2src_2serial_properties_8h.xhtml#a62634036639f88eece6fbf226b45f84b">BAUD</a>))</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      cout &lt;&lt; <span class="stringliteral">&quot;SER: Can not open COM-Port&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      cout &lt;&lt; <span class="stringliteral">&quot;SER: COM-Port open&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;INLINE_CHAINS <span class="keywordtype">void</span> serialCommunicationCapsule_Actor::chain3_True( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// transition &#39;:TOP:openPort:True&#39;</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    rtgChainBegin( 3, <span class="stringliteral">&quot;True&quot;</span> );</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    rtgTransitionBegin();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    rtgTransitionEnd();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#ae9742e72f09eafc0abb926a672cbe74d">choicePoint2_getChars</a>( msg-&gt;data, msg-&gt;sap() ) )</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        chain4_True();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        chain5_False();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">// {{{RME choicePoint &#39;:TOP:getChars&#39;</span></div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#ae9742e72f09eafc0abb926a672cbe74d">  159</a></span>&#160;INLINE_METHODS <span class="keywordtype">int</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#ae9742e72f09eafc0abb926a672cbe74d">serialCommunicationCapsule_Actor::choicePoint2_getChars</a>( <span class="keyword">const</span> <span class="keywordtype">void</span> * rtdata, RTProtocol * rtport )</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">int</span> i, n;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> buf[4096];</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    n = <a class="code" href="../../dd/d8b/rs232_8h.xhtml#ab204b323695fdcc87a0dd7f04e8adc97">RS232_PollComport</a>(<a class="code" href="../../dc/d4d/our_program_2src_2serial_properties_8h.xhtml#a815c323a5a0855438aff183c01f0c5ab">COM_PORT</a>, buf, 4095);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span>(n &gt; 0)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      buf[n] = 0;   <span class="comment">/* always put a &quot;null&quot; at the end of a string! */</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordflow">for</span>(i=0; i &lt; n; i++)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">if</span>(buf[i] &lt; 32)  <span class="comment">/* replace unreadable control-codes by dots */</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;          buf[i] = <span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      cout &lt;&lt; <span class="stringliteral">&quot;SER: Received &quot;</span> &lt;&lt; n &lt;&lt; <span class="stringliteral">&quot; bytes: &quot;</span> &lt;&lt; (<span class="keywordtype">char</span> *)buf &lt;&lt; endl;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <a class="code" href="../../df/d1b/classbyte_array.xhtml">byteArray</a> data((<span class="keywordtype">char</span> *) buf);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a9dd4fbb991c636e2eeefb23e8ea49c67">serialPort</a>.<a class="code" href="../../d7/d72/classserial_raw_protocol_1_1_base.xhtml#aeb191ee9d10f791783621d3ace7dc147">dataReceived</a>(data).send();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor"></span>        Sleep(100);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor"></span>        usleep(100000);  <span class="comment">/* sleep for 100 milliSeconds */</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;INLINE_CHAINS <span class="keywordtype">void</span> serialCommunicationCapsule_Actor::chain4_True( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// transition &#39;:TOP:getChars:True&#39;</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    rtgChainBegin( 4, <span class="stringliteral">&quot;True&quot;</span> );</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    rtgTransitionBegin();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    rtgTransitionEnd();</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#ae9742e72f09eafc0abb926a672cbe74d">choicePoint2_getChars</a>( msg-&gt;data, msg-&gt;sap() ) )</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        chain4_True();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        chain5_False();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;INLINE_CHAINS <span class="keywordtype">void</span> serialCommunicationCapsule_Actor::chain5_False( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;{</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">// transition &#39;:TOP:getChars:False&#39;</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    rtgChainBegin( 4, <span class="stringliteral">&quot;False&quot;</span> );</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    rtgTransitionBegin();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    rtgTransitionEnd();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    enterState( 2 );</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;}</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;INLINE_CHAINS <span class="keywordtype">void</span> serialCommunicationCapsule_Actor::chain2_False( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="comment">// transition &#39;:TOP:openPort:False&#39;</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    rtgChainBegin( 3, <span class="stringliteral">&quot;False&quot;</span> );</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    rtgTransitionBegin();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    rtgTransitionEnd();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    enterState( 2 );</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a4c146a1fba0ae7d4c5408e7d3712a1d1">  225</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a4c146a1fba0ae7d4c5408e7d3712a1d1">serialCommunicationCapsule_Actor::rtsBehavior</a>( <span class="keywordtype">int</span> signalIndex, <span class="keywordtype">int</span> portIndex )</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">for</span>( <span class="keywordtype">int</span> stateIndex = getCurrentState(); ; stateIndex = <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#af985d29a07022c050fddd79d2501adcf">rtg_parent_state</a>[ stateIndex - 1 ] )</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">switch</span>( stateIndex )</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">case</span> 1:</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="comment">// {{{RME state &#39;:TOP&#39;</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">switch</span>( portIndex )</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">case</span> 0:</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="keywordflow">switch</span>( signalIndex )</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keywordflow">case</span> 1:</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    chain1_Initial();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            unexpectedMessage();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">case</span> 2:</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="comment">// {{{RME state &#39;:TOP:Reset&#39;</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">switch</span>( portIndex )</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordflow">case</span> 0:</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">switch</span>( signalIndex )</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">case</span> 1:</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            unexpectedState();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">// {{{RME choicePoint &#39;:TOP:ClosePort&#39;</span></div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a87d2fd8353efe79e556cc4991b9d21ef">  275</a></span>&#160;INLINE_METHODS <span class="keywordtype">int</span> <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a87d2fd8353efe79e556cc4991b9d21ef">serialCommunicationCapsule_Actor::choicePoint3_ClosePort</a>( <span class="keyword">const</span> <span class="keywordtype">void</span> * rtdata, RTProtocol * rtport )</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="../../dd/d8b/rs232_8h.xhtml#a14350395c99e718dc737eeabfd5ef325">RS232_CloseComport</a>(<a class="code" href="../../dc/d4d/our_program_2src_2serial_properties_8h.xhtml#a815c323a5a0855438aff183c01f0c5ab">COM_PORT</a>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#af11ae4c460a92aaf4916951a18690649">  283</a></span>&#160;<span class="keyword">const</span> RTActor_class * <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#af11ae4c460a92aaf4916951a18690649">serialCommunicationCapsule_Actor::getActorData</a>( <span class="keywordtype">void</span> )<span class="keyword"> const</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">return</span> &amp;<a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a4aca9cd2e3e9914b39d9a56282099fc9">serialCommunicationCapsule_Actor::rtg_class</a>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;}</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">const</span> RTActor_class <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a4aca9cd2e3e9914b39d9a56282099fc9">serialCommunicationCapsule_Actor::rtg_class</a> =</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;{</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    (<span class="keyword">const</span> RTActor_class *)0</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  , rtg_state_names</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  , 2</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  , <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#af985d29a07022c050fddd79d2501adcf">serialCommunicationCapsule_Actor::rtg_parent_state</a></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  , &amp;<a class="code" href="../../de/de8/our_program_2src_2serial_communication_capsule_8cpp.xhtml#a991c1f89043c03355b750338ec1dd52f">serialCommunicationCapsule</a></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  , 0</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  , (<span class="keyword">const</span> RTComponentDescriptor *)0</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  , 1</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  , serialCommunicationCapsule_Actor::rtg_ports</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  , 0</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  , (<span class="keyword">const</span> RTLocalBindingDescriptor *)0</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  , 0</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  , (<span class="keyword">const</span> RTFieldDescriptor *)0</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;};</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword">const</span> RTStateId <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#af985d29a07022c050fddd79d2501adcf">serialCommunicationCapsule_Actor::rtg_parent_state</a>[] =</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;{</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    0</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  , 1</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;};</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keyword">const</span> RTPortDescriptor serialCommunicationCapsule_Actor::rtg_ports[] =</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="stringliteral">&quot;serialPort&quot;</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      , (<span class="keyword">const</span> <span class="keywordtype">char</span> *)0</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      , &amp;<a class="code" href="../../d7/d72/classserial_raw_protocol_1_1_base.xhtml#a7f3ab0830bb1ad0100da237fb35cf9f2">serialRawProtocol::Base::rt_class</a></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      , RTOffsetOf( <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml">serialCommunicationCapsule_Actor</a>, <a class="code" href="../../d8/dc1/classserial_communication_capsule___actor.xhtml#a9dd4fbb991c636e2eeefb23e8ea49c67">serialCommunicationCapsule_Actor::serialPort</a> )</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      , 1 <span class="comment">// cardinality</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      , 1</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      , RTPortDescriptor::KindWired + RTPortDescriptor::NotificationDisabled + RTPortDescriptor::RegisterNotPermitted + RTPortDescriptor::VisibilityPublic</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;};</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="preprocessor">#undef SUPER</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">// {{{RME tool &#39;OT::Cpp&#39; property &#39;ImplementationEnding&#39;</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">// {{{USR</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">// }}}USR</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">// }}}RME</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">// }}}RME</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_3c35434c1fdd3b49f1262f4a4bc629e8.xhtml">Hoofdprogramma</a></li><li class="navelem"><a class="el" href="../../dir_006907cc7934051ccae931870c595c88.xhtml">ourProgram</a></li><li class="navelem"><a class="el" href="../../dir_c1d2a9c665ffbf5658567705c451b12a.xhtml">src</a></li><li class="navelem"><a class="el" href="../../de/de8/our_program_2src_2serial_communication_capsule_8cpp.xhtml">serialCommunicationCapsule.cpp</a></li>
    <li class="footer">Generated on Tue Jun 11 2013 13:25:44 for ESE Project 4 by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
