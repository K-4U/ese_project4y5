<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>ESE Project 4: Json::Value Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ESE Project 4
   </div>
   <div id="projectbrief">Main</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/dcf/class_json_1_1_value.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../dc/dd1/class_json_1_1_value-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Json::Value Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Represents a <a href="http://www.json.org">JSON</a> value.  
 <a href="../../df/dcf/class_json_1_1_value.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for Json::Value:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/d03/class_json_1_1_value__coll__graph.png" border="0" usemap="#_json_1_1_value_coll__map" alt="Collaboration graph"/></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac61bab5a465848b57610379cc07995c3"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac61bab5a465848b57610379cc07995c3">Members</a></td></tr>
<tr class="separator:ac61bab5a465848b57610379cc07995c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341cdf2e01f8b3c5b7317aa2f0768c53"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d5/dda/class_json_1_1_value_iterator.xhtml">ValueIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">iterator</a></td></tr>
<tr class="separator:a341cdf2e01f8b3c5b7317aa2f0768c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92282ca92b58b320debd486afb7696a"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d1/d4a/class_json_1_1_value_const_iterator.xhtml">ValueConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">const_iterator</a></td></tr>
<tr class="separator:af92282ca92b58b320debd486afb7696a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0933d59b45793ae4aade1757c322a98d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d4/db0/namespace_json.xhtml#a800fb90eb6ee8d5d62b600c06f87f7d4">Json::UInt</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a></td></tr>
<tr class="separator:a0933d59b45793ae4aade1757c322a98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdf7a7ff73eb130ffcab28504ffdb405"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../d4/db0/namespace_json.xhtml#a08122e8005b706d982e48cca1e2119c7">Json::Int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a></td></tr>
<tr class="separator:abdf7a7ff73eb130ffcab28504ffdb405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b1b5f0fbe81bec133b054419a6273cd"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a5b1b5f0fbe81bec133b054419a6273cd">ArrayIndex</a></td></tr>
<tr class="separator:a5b1b5f0fbe81bec133b054419a6273cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08b6c80c3af7071d908dabf044de5388"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; CZString, <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a08b6c80c3af7071d908dabf044de5388">ObjectValues</a></td></tr>
<tr class="separator:a08b6c80c3af7071d908dabf044de5388"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ada6ba1369448fb0240bccc36efaa46f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ada6ba1369448fb0240bccc36efaa46f7">Value</a> (<a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type</a>=<a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391">nullValue</a>)</td></tr>
<tr class="memdesc:ada6ba1369448fb0240bccc36efaa46f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a default <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Value</a> of the given type.  <a href="#ada6ba1369448fb0240bccc36efaa46f7">More...</a><br/></td></tr>
<tr class="separator:ada6ba1369448fb0240bccc36efaa46f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4744ae571fcf34f4b16a2257b3b3b585"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a4744ae571fcf34f4b16a2257b3b3b585">Value</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a> value)</td></tr>
<tr class="separator:a4744ae571fcf34f4b16a2257b3b3b585"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67a857b01286e3499a87e95be848d20"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ae67a857b01286e3499a87e95be848d20">Value</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> value)</td></tr>
<tr class="separator:ae67a857b01286e3499a87e95be848d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32228cc84d83200cca8441451997996c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a32228cc84d83200cca8441451997996c">Value</a> (double value)</td></tr>
<tr class="separator:a32228cc84d83200cca8441451997996c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad87b849356816aca75995dd07302e49d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ad87b849356816aca75995dd07302e49d">Value</a> (const char *value)</td></tr>
<tr class="separator:ad87b849356816aca75995dd07302e49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13e567d467bb1e699d71e27a76b0e988"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a13e567d467bb1e699d71e27a76b0e988">Value</a> (const char *beginValue, const char *endValue)</td></tr>
<tr class="separator:a13e567d467bb1e699d71e27a76b0e988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a081830e95f88a37054da7e46c65b0766"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a081830e95f88a37054da7e46c65b0766">Value</a> (const <a class="el" href="../../df/d7a/class_json_1_1_static_string.xhtml">StaticString</a> &amp;value)</td></tr>
<tr class="memdesc:a081830e95f88a37054da7e46c65b0766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a value from a static string.  <a href="#a081830e95f88a37054da7e46c65b0766">More...</a><br/></td></tr>
<tr class="separator:a081830e95f88a37054da7e46c65b0766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4501dd4edf3ce3d5145fc656f088b21"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa4501dd4edf3ce3d5145fc656f088b21">Value</a> (const std::string &amp;value)</td></tr>
<tr class="separator:aa4501dd4edf3ce3d5145fc656f088b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350a31ea4a30d384994b0bc010b17495"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a350a31ea4a30d384994b0bc010b17495">Value</a> (bool value)</td></tr>
<tr class="separator:a350a31ea4a30d384994b0bc010b17495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a436dfd3670f95fd665f680eba5cebcf0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a436dfd3670f95fd665f680eba5cebcf0">Value</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other)</td></tr>
<tr class="separator:a436dfd3670f95fd665f680eba5cebcf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287dea48da3912d02756735bf677b27b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a287dea48da3912d02756735bf677b27b">~Value</a> ()</td></tr>
<tr class="separator:a287dea48da3912d02756735bf677b27b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb95221f35541039431cd4bd21d42eaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abb95221f35541039431cd4bd21d42eaa">operator=</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other)</td></tr>
<tr class="separator:abb95221f35541039431cd4bd21d42eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab841120d78e296e1bc06a373345e822"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aab841120d78e296e1bc06a373345e822">swap</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other)</td></tr>
<tr class="separator:aab841120d78e296e1bc06a373345e822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a695ef31fad36b4712918b3ff80158479"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type</a> () const </td></tr>
<tr class="separator:a695ef31fad36b4712918b3ff80158479"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0ad8aa027575c3277296458f3fb7b0a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af0ad8aa027575c3277296458f3fb7b0a">operator&lt;</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:af0ad8aa027575c3277296458f3fb7b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb99dd3628fe44244b32007f9b4f369a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#afb99dd3628fe44244b32007f9b4f369a">operator&lt;=</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:afb99dd3628fe44244b32007f9b4f369a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc13fc47d55abd6e2327b090b83d2911"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#acc13fc47d55abd6e2327b090b83d2911">operator&gt;=</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:acc13fc47d55abd6e2327b090b83d2911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3124a26067bdfde9571bc89527fc6931"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a3124a26067bdfde9571bc89527fc6931">operator&gt;</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:a3124a26067bdfde9571bc89527fc6931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14363dda23a6ae2def9afd1590ae85d3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a14363dda23a6ae2def9afd1590ae85d3">operator==</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:a14363dda23a6ae2def9afd1590ae85d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0f12d2a4ab74bbef08a05504b2cb81d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ad0f12d2a4ab74bbef08a05504b2cb81d">operator!=</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other) const </td></tr>
<tr class="separator:ad0f12d2a4ab74bbef08a05504b2cb81d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4df212f0366cc7744e415972fd5c701b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a4df212f0366cc7744e415972fd5c701b">compare</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;other)</td></tr>
<tr class="separator:a4df212f0366cc7744e415972fd5c701b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa900f2afa2e097086b7759f31d501efc"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa900f2afa2e097086b7759f31d501efc">asCString</a> () const </td></tr>
<tr class="separator:aa900f2afa2e097086b7759f31d501efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ee3d5df576640c93ba683f140828bd"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a03ee3d5df576640c93ba683f140828bd">asString</a> () const </td></tr>
<tr class="separator:a03ee3d5df576640c93ba683f140828bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0ab989674d22421f0862769953a9915"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa0ab989674d22421f0862769953a9915">asInt</a> () const </td></tr>
<tr class="separator:aa0ab989674d22421f0862769953a9915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4695cb0637219692ec0071d49505a00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac4695cb0637219692ec0071d49505a00">asUInt</a> () const </td></tr>
<tr class="separator:ac4695cb0637219692ec0071d49505a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33434ed1c0217a34d04c95fa5342fd37"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a33434ed1c0217a34d04c95fa5342fd37">asDouble</a> () const </td></tr>
<tr class="separator:a33434ed1c0217a34d04c95fa5342fd37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7402c797285c020566c3db5f8ae4e940"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a7402c797285c020566c3db5f8ae4e940">asBool</a> () const </td></tr>
<tr class="separator:a7402c797285c020566c3db5f8ae4e940"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9ad8b1bb91bdd72203dc884b3f4362"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aeb9ad8b1bb91bdd72203dc884b3f4362">isNull</a> () const </td></tr>
<tr class="separator:aeb9ad8b1bb91bdd72203dc884b3f4362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c3716cc7a0216cb1b654bb8f61c8d13"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a3c3716cc7a0216cb1b654bb8f61c8d13">isBool</a> () const </td></tr>
<tr class="separator:a3c3716cc7a0216cb1b654bb8f61c8d13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0df4746d6787d2ce1db1a156c118f14"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ab0df4746d6787d2ce1db1a156c118f14">isInt</a> () const </td></tr>
<tr class="separator:ab0df4746d6787d2ce1db1a156c118f14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae814ca1796fe2d43ac09898b70213989"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ae814ca1796fe2d43ac09898b70213989">isUInt</a> () const </td></tr>
<tr class="separator:ae814ca1796fe2d43ac09898b70213989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4f74ef7b776b1d9c8a10fc3bb4add5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aec4f74ef7b776b1d9c8a10fc3bb4add5">isIntegral</a> () const </td></tr>
<tr class="separator:aec4f74ef7b776b1d9c8a10fc3bb4add5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea567fa51fc808851698bef59b43626"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0ea567fa51fc808851698bef59b43626">isDouble</a> () const </td></tr>
<tr class="separator:a0ea567fa51fc808851698bef59b43626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ce848900e2e8fa23a41fcc2c1409fab"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a8ce848900e2e8fa23a41fcc2c1409fab">isNumeric</a> () const </td></tr>
<tr class="separator:a8ce848900e2e8fa23a41fcc2c1409fab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c01d7c1e8151a5844b595ab00f46c7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a06c01d7c1e8151a5844b595ab00f46c7">isString</a> () const </td></tr>
<tr class="separator:a06c01d7c1e8151a5844b595ab00f46c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c898f93543e55b67418f94bced20af"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac8c898f93543e55b67418f94bced20af">isArray</a> () const </td></tr>
<tr class="separator:ac8c898f93543e55b67418f94bced20af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80cffaa0402b80317c0437216bbb6d92"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a80cffaa0402b80317c0437216bbb6d92">isObject</a> () const </td></tr>
<tr class="separator:a80cffaa0402b80317c0437216bbb6d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ec153803631a27abf58cba2bb1af70c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a7ec153803631a27abf58cba2bb1af70c">isConvertibleTo</a> (<a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a> other) const </td></tr>
<tr class="separator:a7ec153803631a27abf58cba2bb1af70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d4f979237e19aabef12de56c18c38f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a69d4f979237e19aabef12de56c18c38f">size</a> () const </td></tr>
<tr class="memdesc:a69d4f979237e19aabef12de56c18c38f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of values in array or object.  <a href="#a69d4f979237e19aabef12de56c18c38f">More...</a><br/></td></tr>
<tr class="separator:a69d4f979237e19aabef12de56c18c38f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c42d3ff8495dad1e91b43e66553c36"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a99c42d3ff8495dad1e91b43e66553c36">empty</a> () const </td></tr>
<tr class="memdesc:a99c42d3ff8495dad1e91b43e66553c36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if empty array, empty object, or null; otherwise, false.  <a href="#a99c42d3ff8495dad1e91b43e66553c36">More...</a><br/></td></tr>
<tr class="separator:a99c42d3ff8495dad1e91b43e66553c36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a021ab0d15a807fbe051446c9c545ab61"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a021ab0d15a807fbe051446c9c545ab61">operator!</a> () const </td></tr>
<tr class="memdesc:a021ab0d15a807fbe051446c9c545ab61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aeb9ad8b1bb91bdd72203dc884b3f4362">isNull()</a>  <a href="#a021ab0d15a807fbe051446c9c545ab61">More...</a><br/></td></tr>
<tr class="separator:a021ab0d15a807fbe051446c9c545ab61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501a4d67e6c875255c2ecc03ccd2019b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a501a4d67e6c875255c2ecc03ccd2019b">clear</a> ()</td></tr>
<tr class="separator:a501a4d67e6c875255c2ecc03ccd2019b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac3948baaa27f9f7bbf65fa8301484f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a9ac3948baaa27f9f7bbf65fa8301484f">resize</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a69d4f979237e19aabef12de56c18c38f">size</a>)</td></tr>
<tr class="separator:a9ac3948baaa27f9f7bbf65fa8301484f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83267de2c43047529d90f35ced020ba9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a83267de2c43047529d90f35ced020ba9">operator[]</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> index)</td></tr>
<tr class="separator:a83267de2c43047529d90f35ced020ba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d15ba05ca251568567e165529af8a3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a90d15ba05ca251568567e165529af8a3">operator[]</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> index) const </td></tr>
<tr class="separator:a90d15ba05ca251568567e165529af8a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff2e3a2e9fd5db5469588ab7b501d4db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aff2e3a2e9fd5db5469588ab7b501d4db">get</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> index, const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;defaultValue) const </td></tr>
<tr class="separator:aff2e3a2e9fd5db5469588ab7b501d4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193dd42bf77a7a704971e6de07656367"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a193dd42bf77a7a704971e6de07656367">isValidIndex</a> (<a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> index) const </td></tr>
<tr class="memdesc:a193dd42bf77a7a704971e6de07656367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if index &lt; <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a69d4f979237e19aabef12de56c18c38f" title="Number of values in array or object.">size()</a>.  <a href="#a193dd42bf77a7a704971e6de07656367">More...</a><br/></td></tr>
<tr class="separator:a193dd42bf77a7a704971e6de07656367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b7c0ef3bb1958cafdf10483e93ed711"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a3b7c0ef3bb1958cafdf10483e93ed711">append</a> (const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;value)</td></tr>
<tr class="memdesc:a3b7c0ef3bb1958cafdf10483e93ed711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append value to array at the end.  <a href="#a3b7c0ef3bb1958cafdf10483e93ed711">More...</a><br/></td></tr>
<tr class="separator:a3b7c0ef3bb1958cafdf10483e93ed711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa744825e8edd61f538fa7e718f876dcc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa744825e8edd61f538fa7e718f876dcc">operator[]</a> (const char *key)</td></tr>
<tr class="memdesc:aa744825e8edd61f538fa7e718f876dcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access an object value by name, create a null member if it does not exist.  <a href="#aa744825e8edd61f538fa7e718f876dcc">More...</a><br/></td></tr>
<tr class="separator:aa744825e8edd61f538fa7e718f876dcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2579a4be99b4741df38a736f16d5ad"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ace2579a4be99b4741df38a736f16d5ad">operator[]</a> (const char *key) const </td></tr>
<tr class="memdesc:ace2579a4be99b4741df38a736f16d5ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access an object value by name, returns null if there is no member with that name.  <a href="#ace2579a4be99b4741df38a736f16d5ad">More...</a><br/></td></tr>
<tr class="separator:ace2579a4be99b4741df38a736f16d5ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe307d6088dfa1299729f795259f590e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abe307d6088dfa1299729f795259f590e">operator[]</a> (const std::string &amp;key)</td></tr>
<tr class="memdesc:abe307d6088dfa1299729f795259f590e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access an object value by name, create a null member if it does not exist.  <a href="#abe307d6088dfa1299729f795259f590e">More...</a><br/></td></tr>
<tr class="separator:abe307d6088dfa1299729f795259f590e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c53bfd2381d5a61036d7dc0b023d697"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a3c53bfd2381d5a61036d7dc0b023d697">operator[]</a> (const std::string &amp;key) const </td></tr>
<tr class="memdesc:a3c53bfd2381d5a61036d7dc0b023d697"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access an object value by name, returns null if there is no member with that name.  <a href="#a3c53bfd2381d5a61036d7dc0b023d697">More...</a><br/></td></tr>
<tr class="separator:a3c53bfd2381d5a61036d7dc0b023d697"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac191343a7ee2ca54827d67d934200d4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac191343a7ee2ca54827d67d934200d4f">operator[]</a> (const <a class="el" href="../../df/d7a/class_json_1_1_static_string.xhtml">StaticString</a> &amp;key)</td></tr>
<tr class="memdesc:ac191343a7ee2ca54827d67d934200d4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access an object value by name, create a null member if it does not exist.  <a href="#ac191343a7ee2ca54827d67d934200d4f">More...</a><br/></td></tr>
<tr class="separator:ac191343a7ee2ca54827d67d934200d4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab76b3323cde14c7db20676d07b260ce7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ab76b3323cde14c7db20676d07b260ce7">get</a> (const char *key, const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;defaultValue) const </td></tr>
<tr class="memdesc:ab76b3323cde14c7db20676d07b260ce7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the member named key if it exist, defaultValue otherwise.  <a href="#ab76b3323cde14c7db20676d07b260ce7">More...</a><br/></td></tr>
<tr class="separator:ab76b3323cde14c7db20676d07b260ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54a34264356e01ee9c21a75ccfc809e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a54a34264356e01ee9c21a75ccfc809e9">get</a> (const std::string &amp;key, const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;defaultValue) const </td></tr>
<tr class="memdesc:a54a34264356e01ee9c21a75ccfc809e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the member named key if it exist, defaultValue otherwise.  <a href="#a54a34264356e01ee9c21a75ccfc809e9">More...</a><br/></td></tr>
<tr class="separator:a54a34264356e01ee9c21a75ccfc809e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa52f7873b95d29627d6e83ba96f69aaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa52f7873b95d29627d6e83ba96f69aaa">removeMember</a> (const char *key)</td></tr>
<tr class="memdesc:aa52f7873b95d29627d6e83ba96f69aaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove and return the named member.  <a href="#aa52f7873b95d29627d6e83ba96f69aaa">More...</a><br/></td></tr>
<tr class="separator:aa52f7873b95d29627d6e83ba96f69aaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1f95f7ca3906e6bcc2a7be93210ecba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ae1f95f7ca3906e6bcc2a7be93210ecba">removeMember</a> (const std::string &amp;key)</td></tr>
<tr class="memdesc:ae1f95f7ca3906e6bcc2a7be93210ecba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa52f7873b95d29627d6e83ba96f69aaa" title="Remove and return the named member.">removeMember(const char*)</a>  <a href="#ae1f95f7ca3906e6bcc2a7be93210ecba">More...</a><br/></td></tr>
<tr class="separator:ae1f95f7ca3906e6bcc2a7be93210ecba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a196defba501d70ea2b6793afb04108e3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a196defba501d70ea2b6793afb04108e3">isMember</a> (const char *key) const </td></tr>
<tr class="memdesc:a196defba501d70ea2b6793afb04108e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if the object has a member named key.  <a href="#a196defba501d70ea2b6793afb04108e3">More...</a><br/></td></tr>
<tr class="separator:a196defba501d70ea2b6793afb04108e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af728b5738aaa133f3aad2e39dc4f415e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af728b5738aaa133f3aad2e39dc4f415e">isMember</a> (const std::string &amp;key) const </td></tr>
<tr class="memdesc:af728b5738aaa133f3aad2e39dc4f415e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if the object has a member named key.  <a href="#af728b5738aaa133f3aad2e39dc4f415e">More...</a><br/></td></tr>
<tr class="separator:af728b5738aaa133f3aad2e39dc4f415e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a179f6d002c2bb916ce0d0b9db9b87ebe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac61bab5a465848b57610379cc07995c3">Members</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a179f6d002c2bb916ce0d0b9db9b87ebe">getMemberNames</a> () const </td></tr>
<tr class="memdesc:a179f6d002c2bb916ce0d0b9db9b87ebe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a list of the member names.  <a href="#a179f6d002c2bb916ce0d0b9db9b87ebe">More...</a><br/></td></tr>
<tr class="separator:a179f6d002c2bb916ce0d0b9db9b87ebe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29f3a30f7e5d3af6f38d57999bf5b480"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a29f3a30f7e5d3af6f38d57999bf5b480">setComment</a> (const char *comment, <a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a> placement)</td></tr>
<tr class="memdesc:a29f3a30f7e5d3af6f38d57999bf5b480"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comments must be //... or /* ... */.  <a href="#a29f3a30f7e5d3af6f38d57999bf5b480">More...</a><br/></td></tr>
<tr class="separator:a29f3a30f7e5d3af6f38d57999bf5b480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d68a2e7d4e1e317cd9e812e12181689"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a6d68a2e7d4e1e317cd9e812e12181689">setComment</a> (const std::string &amp;comment, <a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a> placement)</td></tr>
<tr class="memdesc:a6d68a2e7d4e1e317cd9e812e12181689"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comments must be //... or /* ... */.  <a href="#a6d68a2e7d4e1e317cd9e812e12181689">More...</a><br/></td></tr>
<tr class="separator:a6d68a2e7d4e1e317cd9e812e12181689"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06567a00363cab9601be7e31336db03a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a06567a00363cab9601be7e31336db03a">hasComment</a> (<a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a> placement) const </td></tr>
<tr class="separator:a06567a00363cab9601be7e31336db03a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1e105b5d7f55d6e42f4fb2f3674116f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa1e105b5d7f55d6e42f4fb2f3674116f">getComment</a> (<a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a> placement) const </td></tr>
<tr class="memdesc:aa1e105b5d7f55d6e42f4fb2f3674116f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Include delimiters and embedded newlines.  <a href="#aa1e105b5d7f55d6e42f4fb2f3674116f">More...</a><br/></td></tr>
<tr class="separator:aa1e105b5d7f55d6e42f4fb2f3674116f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05357cf78959b790337fae4e5580ee4f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a05357cf78959b790337fae4e5580ee4f">toStyledString</a> () const </td></tr>
<tr class="separator:a05357cf78959b790337fae4e5580ee4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4b9cb50bd804b130c56c44e82cbf3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a9d4b9cb50bd804b130c56c44e82cbf3c">begin</a> () const </td></tr>
<tr class="separator:a9d4b9cb50bd804b130c56c44e82cbf3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a496b70a676b2feb850af1c94df44fc14"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a496b70a676b2feb850af1c94df44fc14">end</a> () const </td></tr>
<tr class="separator:a496b70a676b2feb850af1c94df44fc14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec156770bf554bee85279825d046fad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#acec156770bf554bee85279825d046fad">begin</a> ()</td></tr>
<tr class="separator:acec156770bf554bee85279825d046fad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ac91976a65644bde515280767c7bcde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a2ac91976a65644bde515280767c7bcde">end</a> ()</td></tr>
<tr class="separator:a2ac91976a65644bde515280767c7bcde"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a57d8e12306732c80d1719206fcc59b22"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a57d8e12306732c80d1719206fcc59b22">null</a></td></tr>
<tr class="separator:a57d8e12306732c80d1719206fcc59b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7df8a39e2502b8c92a6a41e3d752d2c8"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a7df8a39e2502b8c92a6a41e3d752d2c8">minInt</a></td></tr>
<tr class="separator:a7df8a39e2502b8c92a6a41e3d752d2c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978c799a8af3114ef7dab6fd0a310a1b"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a978c799a8af3114ef7dab6fd0a310a1b">maxInt</a></td></tr>
<tr class="separator:a978c799a8af3114ef7dab6fd0a310a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac79e63ee68d3aa914bfd6988be669b87"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac79e63ee68d3aa914bfd6988be669b87">maxUInt</a></td></tr>
<tr class="separator:ac79e63ee68d3aa914bfd6988be669b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ad016df56489e5d360735457afba2f649"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ad016df56489e5d360735457afba2f649">ValueIteratorBase</a></td></tr>
<tr class="separator:ad016df56489e5d360735457afba2f649"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Represents a <a href="http://www.json.org">JSON</a> value. </p>
<p>This class is a discriminated union wrapper that can represents a:</p>
<ul>
<li>signed integer [range: <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a7df8a39e2502b8c92a6a41e3d752d2c8">Value::minInt</a> - <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a978c799a8af3114ef7dab6fd0a310a1b">Value::maxInt</a>]</li>
<li>unsigned integer (range: 0 - <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac79e63ee68d3aa914bfd6988be669b87">Value::maxUInt</a>)</li>
<li>double</li>
<li>UTF-8 string</li>
<li>boolean</li>
<li>'null'</li>
<li>an ordered list of <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Value</a></li>
<li>collection of name/value pairs (javascript object)</li>
</ul>
<p>The type of the held value is represented by a <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e" title="Type of the value held by a Value object.">ValueType</a> and can be obtained using <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a>.</p>
<p>values of an <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" title="object value (collection of name/value pairs).">objectValue</a> or <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" title="array value (ordered list)">arrayValue</a> can be accessed using <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a83267de2c43047529d90f35ced020ba9">operator[]()</a> methods. Non const methods will automatically create the a <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" title="&#39;null&#39; value">nullValue</a> element if it does not exist. The sequence of an <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" title="array value (ordered list)">arrayValue</a> will be automatically resize and initialized with <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" title="&#39;null&#39; value">nullValue</a>. <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a9ac3948baaa27f9f7bbf65fa8301484f">resize()</a> can be used to enlarge or truncate an <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" title="array value (ordered list)">arrayValue</a>.</p>
<p>The <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aff2e3a2e9fd5db5469588ab7b501d4db">get()</a> methods can be used to obtanis default value in the case the required element does not exist.</p>
<p>It is possible to iterate over the list of a <a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" title="object value (collection of name/value pairs).">objectValue</a> values using the <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a179f6d002c2bb916ce0d0b9db9b87ebe" title="Return a list of the member names.">getMemberNames()</a> method. </p>

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00111">111</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a5b1b5f0fbe81bec133b054419a6273cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a5b1b5f0fbe81bec133b054419a6273cd">Json::Value::ArrayIndex</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00124">124</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="af92282ca92b58b320debd486afb7696a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d1/d4a/class_json_1_1_value_const_iterator.xhtml">ValueConstIterator</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">Json::Value::const_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00121">121</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="abdf7a7ff73eb130ffcab28504ffdb405"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d4/db0/namespace_json.xhtml#a08122e8005b706d982e48cca1e2119c7">Json::Int</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Json::Value::Int</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00123">123</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="a341cdf2e01f8b3c5b7317aa2f0768c53"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d5/dda/class_json_1_1_value_iterator.xhtml">ValueIterator</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">Json::Value::iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00120">120</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac61bab5a465848b57610379cc07995c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;std::string&gt; <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac61bab5a465848b57610379cc07995c3">Json::Value::Members</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00119">119</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="a08b6c80c3af7071d908dabf044de5388"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::map&lt;CZString, <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&gt; <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a08b6c80c3af7071d908dabf044de5388">Json::Value::ObjectValues</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00161">161</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0933d59b45793ae4aade1757c322a98d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../d4/db0/namespace_json.xhtml#a800fb90eb6ee8d5d62b600c06f87f7d4">Json::UInt</a> <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">Json::Value::UInt</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00122">122</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ada6ba1369448fb0240bccc36efaa46f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a>&#160;</td>
          <td class="paramname"><em>type</em> = <code><a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391">nullValue</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a default <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Value</a> of the given type. </p>
<pre class="fragment">This is a very useful constructor.
To create an empty array, pass arrayValue.
To create an empty object, pass objectValue.
Another Value can then be set to this one by assignment.
</pre><p> This is useful since <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a501a4d67e6c875255c2ecc03ccd2019b">clear()</a> and <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a9ac3948baaa27f9f7bbf65fa8301484f">resize()</a> will not alter types. </p>
<pre class="fragment">Examples:
</pre> <div class="fragment"><div class="line"><a class="code" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Json::Value</a> null_value; <span class="comment">// null</span></div>
<div class="line"><a class="code" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Json::Value</a> arr_value(<a class="code" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" title="array value (ordered list)">Json::arrayValue</a>); <span class="comment">// []</span></div>
<div class="line"><a class="code" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Json::Value</a> obj_value(<a class="code" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" title="object value (collection of name/value pairs).">Json::objectValue</a>); <span class="comment">// {}</span></div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="a4744ae571fcf34f4b16a2257b3b3b585"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae67a857b01286e3499a87e95be848d20"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a32228cc84d83200cca8441451997996c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad87b849356816aca75995dd07302e49d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a13e567d467bb1e699d71e27a76b0e988"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>beginValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>endValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a081830e95f88a37054da7e46c65b0766"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/d7a/class_json_1_1_static_string.xhtml">StaticString</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a value from a static string. </p>
<p>Like other value string constructor but do not duplicate the string for internal storage. The given string must remain alive after the call to this constructor. Example of usage: </p>
<div class="fragment"><div class="line"><a class="code" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Json::Value</a> aValue( StaticString(<span class="stringliteral">&quot;some text&quot;</span>) );</div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="aa4501dd4edf3ce3d5145fc656f088b21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a350a31ea4a30d384994b0bc010b17495"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a436dfd3670f95fd665f680eba5cebcf0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::Value </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a287dea48da3912d02756735bf677b27b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value::~Value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3b7c0ef3bb1958cafdf10483e93ed711"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::append </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Append value to array at the end. </p>
<p>Equivalent to jsonvalue[jsonvalue.size()] = value; </p>

</div>
</div>
<a class="anchor" id="a7402c797285c020566c3db5f8ae4e940"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::asBool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa900f2afa2e097086b7759f31d501efc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* Json::Value::asCString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a33434ed1c0217a34d04c95fa5342fd37"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Json::Value::asDouble </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa0ab989674d22421f0862769953a9915"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a> Json::Value::asInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a03ee3d5df576640c93ba683f140828bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string Json::Value::asString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac4695cb0637219692ec0071d49505a00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> Json::Value::asUInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9d4b9cb50bd804b130c56c44e82cbf3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">const_iterator</a> Json::Value::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acec156770bf554bee85279825d046fad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">iterator</a> Json::Value::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a501a4d67e6c875255c2ecc03ccd2019b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Json::Value::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove all object members and array elements. </p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is arrayValue, objectValue, or nullValue </dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is unchanged </dd></dl>

</div>
</div>
<a class="anchor" id="a4df212f0366cc7744e415972fd5c701b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Json::Value::compare </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a99c42d3ff8495dad1e91b43e66553c36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return true if empty array, empty object, or null; otherwise, false. </p>

</div>
</div>
<a class="anchor" id="a496b70a676b2feb850af1c94df44fc14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#af92282ca92b58b320debd486afb7696a">const_iterator</a> Json::Value::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2ac91976a65644bde515280767c7bcde"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a341cdf2e01f8b3c5b7317aa2f0768c53">iterator</a> Json::Value::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aff2e3a2e9fd5db5469588ab7b501d4db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>If the array contains at least index+1 elements, returns the element value, otherwise returns defaultValue. </p>

</div>
</div>
<a class="anchor" id="ab76b3323cde14c7db20676d07b260ce7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::get </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the member named key if it exist, defaultValue otherwise. </p>

</div>
</div>
<a class="anchor" id="a54a34264356e01ee9c21a75ccfc809e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::get </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the member named key if it exist, defaultValue otherwise. </p>

</div>
</div>
<a class="anchor" id="aa1e105b5d7f55d6e42f4fb2f3674116f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string Json::Value::getComment </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a>&#160;</td>
          <td class="paramname"><em>placement</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Include delimiters and embedded newlines. </p>

</div>
</div>
<a class="anchor" id="a179f6d002c2bb916ce0d0b9db9b87ebe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#ac61bab5a465848b57610379cc07995c3">Members</a> Json::Value::getMemberNames </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a list of the member names. </p>
<p>If null, return an empty list. </p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is objectValue or nullValue </dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>if <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> was nullValue, it remains nullValue </dd></dl>

</div>
</div>
<a class="anchor" id="a06567a00363cab9601be7e31336db03a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::hasComment </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a>&#160;</td>
          <td class="paramname"><em>placement</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac8c898f93543e55b67418f94bced20af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isArray </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3c3716cc7a0216cb1b654bb8f61c8d13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isBool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7ec153803631a27abf58cba2bb1af70c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isConvertibleTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0ea567fa51fc808851698bef59b43626"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isDouble </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab0df4746d6787d2ce1db1a156c118f14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aec4f74ef7b776b1d9c8a10fc3bb4add5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isIntegral </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a196defba501d70ea2b6793afb04108e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isMember </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return true if the object has a member named key. </p>

</div>
</div>
<a class="anchor" id="af728b5738aaa133f3aad2e39dc4f415e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isMember </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return true if the object has a member named key. </p>

</div>
</div>
<a class="anchor" id="aeb9ad8b1bb91bdd72203dc884b3f4362"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8ce848900e2e8fa23a41fcc2c1409fab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isNumeric </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a80cffaa0402b80317c0437216bbb6d92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a06c01d7c1e8151a5844b595ab00f46c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae814ca1796fe2d43ac09898b70213989"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isUInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a193dd42bf77a7a704971e6de07656367"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::isValidIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return true if index &lt; <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a69d4f979237e19aabef12de56c18c38f" title="Number of values in array or object.">size()</a>. </p>

</div>
</div>
<a class="anchor" id="a021ab0d15a807fbe051446c9c545ab61"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator! </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aeb9ad8b1bb91bdd72203dc884b3f4362">isNull()</a> </p>

</div>
</div>
<a class="anchor" id="ad0f12d2a4ab74bbef08a05504b2cb81d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a021ab0d15a807fbe051446c9c545ab61">Json::Value::operator!</a>= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af0ad8aa027575c3277296458f3fb7b0a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afb99dd3628fe44244b32007f9b4f369a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="abb95221f35541039431cd4bd21d42eaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a14363dda23a6ae2def9afd1590ae85d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3124a26067bdfde9571bc89527fc6931"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acc13fc47d55abd6e2327b090b83d2911"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Json::Value::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a83267de2c43047529d90f35ced020ba9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access an array element (zero based index ). If the array contains less than index element, then null value are inserted in the array so that its size is index+1. (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) </p>

</div>
</div>
<a class="anchor" id="a90d15ba05ca251568567e165529af8a3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access an array element (zero based index ) (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) </p>

</div>
</div>
<a class="anchor" id="aa744825e8edd61f538fa7e718f876dcc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access an object value by name, create a null member if it does not exist. </p>

</div>
</div>
<a class="anchor" id="ace2579a4be99b4741df38a736f16d5ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access an object value by name, returns null if there is no member with that name. </p>

</div>
</div>
<a class="anchor" id="abe307d6088dfa1299729f795259f590e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access an object value by name, create a null member if it does not exist. </p>

</div>
</div>
<a class="anchor" id="a3c53bfd2381d5a61036d7dc0b023d697"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access an object value by name, returns null if there is no member with that name. </p>

</div>
</div>
<a class="anchor" id="ac191343a7ee2ca54827d67d934200d4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a>&amp; Json::Value::operator[] </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/d7a/class_json_1_1_static_string.xhtml">StaticString</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access an object value by name, create a null member if it does not exist. </p>
<p>If the object as no entry for that name, then the member name used to store the new entry is not duplicated. Example of use: </p>
<div class="fragment"><div class="line"><a class="code" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Json::Value</a> object;</div>
<div class="line"><span class="keyword">static</span> <span class="keyword">const</span> StaticString code(<span class="stringliteral">&quot;code&quot;</span>);</div>
<div class="line"><span class="keywordtype">object</span>[code] = 1234;</div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="aa52f7873b95d29627d6e83ba96f69aaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::removeMember </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove and return the named member. </p>
<p>Do nothing if it did not exist. </p>
<dl class="section return"><dt>Returns</dt><dd>the removed <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml" title="Represents a JSON value.">Value</a>, or null. </dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is objectValue or nullValue </dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is unchanged </dd></dl>

</div>
</div>
<a class="anchor" id="ae1f95f7ca3906e6bcc2a7be93210ecba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::removeMember </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#aa52f7873b95d29627d6e83ba96f69aaa" title="Remove and return the named member.">removeMember(const char*)</a> </p>

</div>
</div>
<a class="anchor" id="a9ac3948baaa27f9f7bbf65fa8301484f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Json::Value::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a>&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the array to size elements. New elements are initialized to null. May only be called on nullValue or arrayValue. </p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is arrayValue or nullValue </dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a695ef31fad36b4712918b3ff80158479">type()</a> is arrayValue </dd></dl>

</div>
</div>
<a class="anchor" id="a29f3a30f7e5d3af6f38d57999bf5b480"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Json::Value::setComment </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>comment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a>&#160;</td>
          <td class="paramname"><em>placement</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Comments must be //... or /* ... */. </p>

</div>
</div>
<a class="anchor" id="a6d68a2e7d4e1e317cd9e812e12181689"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Json::Value::setComment </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>comment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/db0/namespace_json.xhtml#a4fc417c23905b2ae9e2c47d197a45351">CommentPlacement</a>&#160;</td>
          <td class="paramname"><em>placement</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Comments must be //... or /* ... */. </p>

</div>
</div>
<a class="anchor" id="a69d4f979237e19aabef12de56c18c38f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> Json::Value::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of values in array or object. </p>

</div>
</div>
<a class="anchor" id="aab841120d78e296e1bc06a373345e822"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Json::Value::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap values. </p>
<dl class="section note"><dt>Note</dt><dd>Currently, comments are intentionally not swapped, for both logic and efficiency. </dd></dl>

</div>
</div>
<a class="anchor" id="a05357cf78959b790337fae4e5580ee4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string Json::Value::toStyledString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a695ef31fad36b4712918b3ff80158479"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/db0/namespace_json.xhtml#a7d654b75c16a57007925868e38212b4e">ValueType</a> Json::Value::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="ad016df56489e5d360735457afba2f649"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="../../df/d7a/class_json_1_1_value_iterator_base.xhtml">ValueIteratorBase</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00113">113</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a978c799a8af3114ef7dab6fd0a310a1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a> Json::Value::maxInt</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00128">128</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac79e63ee68d3aa914bfd6988be669b87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#a0933d59b45793ae4aade1757c322a98d">UInt</a> Json::Value::maxUInt</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00129">129</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7df8a39e2502b8c92a6a41e3d752d2c8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml#abdf7a7ff73eb130ffcab28504ffdb405">Int</a> Json::Value::minInt</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00127">127</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<a class="anchor" id="a57d8e12306732c80d1719206fcc59b22"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a> Json::Value::null</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d4/d3f/value_8h_source.xhtml#l00126">126</a> of file <a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Hoofdprogramma/include/<a class="el" href="../../d4/d3f/value_8h_source.xhtml">value.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/db0/namespace_json.xhtml">Json</a></li><li class="navelem"><a class="el" href="../../df/dcf/class_json_1_1_value.xhtml">Value</a></li>
    <li class="footer">Generated on Tue Jun 11 2013 13:25:46 for ESE Project 4 by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
